{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.1.0",
    "metadata": {
        "description": "Installs the Cosmos CMS Web Farm."
    },
    "parameters": {
        "farmNumber": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Web Farm ID no from farm catalog."
            }
        },
        "websiteNumber": {
            "type": "int",
            "metadata": {
                "description": "Web site ID no for this farm."
            }
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "SHARED",
            "metadata": {
                "description": "Subscription ID if applicable."
            }
        },
        "purchaserTenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant ID of purchaser."
            }
        },
        "purchaserEmail": {
            "type": "string",
            "metadata": {
                "description": "Email of purchaser."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Geo-redundant storage",
            "allowedValues": [
                "Locally-redundant storage",
                "Geo-redundant storage"
            ],
            "metadata": {
                "description": "Storage account type."
            }
        },
        "azureCommConn": {
            "type": "string",
            "metadata": {
                "description": "Azure Email Communications connection string."
            }
        },
        "GoogleClientId":{
            "type": "string",
            "metadata": {
                "description": "(OpenID): Google client ID."
            }
        },
        "GoogleSecret":{
            "type": "string",
            "metadata": {
                "description": "(OpenID): Google client secret."
            }
        },
        "MicrosoftClientId":{
            "type": "string",
            "metadata": {
                "description": "(OpenID): Microsoft client ID."
            }
        },
        "MicrosoftSecret":{
            "type": "string",
            "metadata": {
                "description": "(OpenID): Microsoft client secret."
            }
        }
    },
    "functions": [],
    "variables": {
        "frontdoorName": "[concat('afd-', parameters('farmNumber'), '-', uniqueString(resourceGroup().id))]",
        "signalRName": "[concat('signalr-', parameters('farmNumber'), '-', uniqueString(resourceGroup().id))]",
        "vnetName": "[concat('vnet-', parameters('farmNumber'), '-', uniquestring(resourceGroup().id))]",
        "adminEmail": "[parameters('purchaserEmail')]",
        "location": "[resourceGroup().location]",
        "accountName": "[concat('cosmos-', parameters('farmNumber'), '-', uniqueString(resourceGroup().id))]",
        "databaseName": "[concat('cosmosdbxx', parameters('farmNumber'), 'xx', parameters('websiteNumber'))]",
        "storageAccountName": "[concat('files', parameters('farmNumber'), 'xx', parameters('websiteNumber'), 'xx', uniquestring(resourceGroup().id))]",
        "appServicePlanName": "[concat('appplan', parameters('farmNumber'), '-', uniquestring(resourceGroup().id))]",
        "editorName": "[concat('edi-', parameters('farmNumber'), '-', parameters('websiteNumber'), '-', uniquestring(resourceGroup().id))]",
        "publisherName": "[concat('pub-', parameters('farmNumber'), '-', parameters('websiteNumber'), '-', uniquestring(resourceGroup().id))]",
        "sendGridApiKey": "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",
        "dockerRegPassword": "y0SH6UcQ8JrYfrsPwf6Z1q9U+SU+iqvkfOC2yy4+6J+ACRDHZLtJ",
        "dockerRegUrl": "https://moonrise.azurecr.io",
        "dockerRegUsername": "moonrise"
    },
    "resources": [
        {
            "type": "Microsoft.SignalRService/signalR",
            "apiVersion": "2023-02-01",
            "name": "[variables('signalRName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "sku": {
                "name": "Standard_S1",
                "tier": "Standard",
                "size": "S1",
                "capacity": 1
            },
            "kind": "SignalR",
            "properties": {
                "tls": {
                    "clientCertEnabled": false
                },
                "features": [
                    {
                        "flag": "ServiceMode",
                        "value": "Default",
                        "properties": {}
                    },
                    {
                        "flag": "EnableConnectivityLogs",
                        "value": "True",
                        "properties": {}
                    }
                ],
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ]
                },
                "upstream": {},
                "networkACLs": {
                    "defaultAction": "Deny",
                    "publicNetwork": {
                        "allow": [
                            "ServerConnection",
                            "ClientConnection",
                            "RESTAPI",
                            "Trace"
                        ]
                    },
                    "privateEndpoints": []
                },
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "disableAadAuth": false
            }
        },
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2022-11-01-preview",
            "name": "[variables('frontdoorName')]",
            "location": "Global",
            "sku": {
                "name": "Standard_AzureFrontDoor"
            },
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "kind": "frontdoor",
            "properties": {
                "originResponseTimeoutSeconds": 60,
                "extendedProperties": {}
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('vnetName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.AzureCosmosDB",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-11-15-preview",
            "name": "[variables('accountName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
            ],
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "ignoreMissingVNetServiceEndpoint": false
                    }
                ],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "enableMaterializedViews": false,
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enableBurstCapacity": false,
                "minimalTlsVersion": "Tls",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": [],
                "diagnosticLogSettings": {
                    "enableFullTextQuery": "None"
                },
                "keysMetadata": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15-preview",
            "name": "[concat(variables('accountName'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15-preview",
            "name": "[concat(variables('accountName'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(variables('accountName'), '/', variables('databaseName'))]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('databaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "sku": {
                "name": "P0v3",
                "tier": "PremiumV3",
                "size": "P0v3",
                "family": "Pv3",
                "capacity": 2
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]",
                "displayName": "storage20201023"
            },
            "location": "[variables('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[if(equals(parameters('storageAccountType'), 'Locally-redundant storage'), 'Standard_LRS', 'Standard_RAGRS')]",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), '$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), 'ccmsshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('publisherName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('publisherName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('publisherName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": true,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|moonrise.azurecr.io/cosmos-publisher",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
                    "healthCheckPath": "/"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "CosmosIdentityDbName": "[variables('databaseName')]",
                        "CosmosAdminEmail": "[variables('adminEmail')]",
                        "CosmosSendGridApiKey": "[variables('sendGridApiKey')]",
                        "CosmosPrimaryCloud": "azure",
                        "Authentication_Google_ClientId": "[parameters('GoogleClientId')]",
                        "Authentication_Google_ClientSecret": "[parameters('GoogleSecret')]",
                        "Authentication_Microsoft_ClientId": "[parameters('MicrosoftClientId')]",
                        "Authentication_Microsoft_ClientSecret": "[parameters('MicrosoftSecret')]",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "[variables('dockerRegPassword')]",
                        "DOCKER_REGISTRY_SERVER_URL": "[variables('dockerRegUrl')]",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "[variables('dockerRegUsername')]",
                        "DOCKER_ENABLE_CI": true
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), '2019-12-12').connectionStrings[0].connectionString]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[parameters('azureCommConn')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('editorName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('editorName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('editorName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": true,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|moonrise.azurecr.io/cosmos-editor",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
                    "healthCheckPath": "/Identity/Account/Login"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "AzureBlobStorageEndPoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-07-01').primaryEndpoints.web]",
                        "AzureBlobStorageContainerName": "$web",
                        "AzureBlobStorageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                        "CosmosIdentityDbName": "[variables('databaseName')]",
                        "CosmosAdminEmail": "[variables('adminEmail')]",
                        "CosmosSendGridApiKey": "[variables('sendGridApiKey')]",
                        "CosmosPrimaryCloud": "azure",
                        "CosmosAllowSetup": "true",
                        "CosmosPublisherUrl": "[concat('https://', variables('publisherName'), '.azurewebsites.net')]",
                        "CosmosEditorUrl": "[concat('https://', variables('editorName'), '.azurewebsites.net')]",
                        "CosmosStorageUrl": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-07-01').primaryEndpoints.web]",
                        "CosmosBlobContainer": "$web",
                        "CosmosSecretKey": "[concat('CSK-', uniqueString(resourceGroup().id))]",
                        "Authentication_Google_ClientId": "[parameters('GoogleClientId')]",
                        "Authentication_Google_ClientSecret": "[parameters('GoogleSecret')]",
                        "Authentication_Microsoft_ClientId": "[parameters('MicrosoftClientId')]",
                        "Authentication_Microsoft_ClientSecret": "[parameters('MicrosoftSecret')]",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "[variables('dockerRegPassword')]",
                        "DOCKER_REGISTRY_SERVER_URL": "[variables('dockerRegUrl')]",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "[variables('dockerRegUsername')]",
                        "DOCKER_ENABLE_CI": true
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), '2019-12-12').connectionStrings[0].connectionString]",
                            "type": "Custom"
                        },
                        "CosmosSignalRConnection": {
                            "value": "[listKeys(resourceId('Microsoft.SignalRService/signalR', variables('signalRName')), '2023-02-01').primaryConnectionString]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[parameters('azureCommConn')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {}
}