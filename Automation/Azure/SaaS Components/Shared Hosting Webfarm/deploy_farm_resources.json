{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.1.0",
    "metadata": {
        "description": "Installs the Cosmos CMS Web Farm."
    },
    "parameters": {
        "farmNumber": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Web Farm ID no from farm catalog."
            }
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "SHARED",
            "metadata": {
                "description": "Subscription ID if applicable."
            }
        },
        "purchaserTenantId": {
            "type": "string",
            "defaultValue": "9366b962-6d44-4019-a4cb-9dc33d9c80b7",
            "metadata": {
                "description": "Tenant ID of purchaser (defaults to moonrise.net)."
            }
        },
        "purchaserEmail": {
            "type": "string",
            "metadata": {
                "description": "Email of purchaser."
            }
        }
    },
    "functions": [],
    "variables": {
        "vnetName": "[concat('vnet-', parameters('farmNumber'), '-', uniquestring(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "accountName": "[concat('cosmos-', parameters('farmNumber'), '-', uniqueString(resourceGroup().id))]","appServicePlanName": "[concat('appplan', parameters('farmNumber'), '-', uniquestring(resourceGroup().id))]",
        "farmKeyVaultName": "[concat('farmvault', parameters('farmNumber'), uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('vnetName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.AzureCosmosDB",
                        "locations": [
                            "*"
                        ]
                    },
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[variables('farmKeyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[parameters('purchaserTenantId')]",
                "accessPolicies": [],
                "enableRbacAuthorization": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-11-15-preview",
            "name": "[variables('accountName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
            ],
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "ignoreMissingVNetServiceEndpoint": false
                    }
                ],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "enableMaterializedViews": false,
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enableBurstCapacity": false,
                "minimalTlsVersion": "Tls",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": [],
                "diagnosticLogSettings": {
                    "enableFullTextQuery": "None"
                },
                "keysMetadata": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15-preview",
            "name": "[concat(variables('accountName'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15-preview",
            "name": "[concat(variables('accountName'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(variables('farmKeyVaultName'), '/ApplicationDbContextConnection')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('farmKeyVaultName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
            ],
            "properties": {
                "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), '2019-12-12').connectionStrings[0].connectionString]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "tags": {
                "SubscriptionId": "[parameters('subscriptionId')]",
                "FarmNumber": "[parameters('farmNumber')]",
                "PurchaserTenantId": "[parameters('purchaserTenantId')]",
                "PurchaserEmail": "[parameters('purchaserEmail')]"
            },
            "sku": {
                "name": "P0v3",
                "tier": "PremiumV3",
                "size": "P0v3",
                "family": "Pv3",
                "capacity": 2
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        }
    ],
    "outputs": {}
}